{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Projects\\\\secure-book-v2\\\\client\\\\src\\\\config\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport UserService from '../services/user.service.js';\nimport { useUserContext } from '../contexts/UserContext.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const [isTokenValid, setIsTokenValid] = useState(null);\n  const {\n    user,\n    setUser\n  } = useUserContext();\n  useEffect(() => {\n    (async function () {\n      if (!user) {\n        setIsTokenValid(false);\n        return;\n      }\n      try {\n        const headers = {\n          Authorization: user.token\n        };\n        const res = await axios.get(`${process.env.REACT_APP_SERVER_SERVICE}/api/auth/verify`, {\n          headers\n        });\n        if (res.data.code === 200) {\n          await fetchData(res.data.ownerID);\n          setIsTokenValid(true);\n        } else {\n          setIsTokenValid(false);\n        }\n      } catch (err) {\n        setIsTokenValid(false);\n      }\n    })();\n  }, []);\n  const fetchData = async owner => {\n    try {\n      const response = await UserService.getUser(owner);\n      if (response.code === 200) {\n        setUser(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  if (isTokenValid === null) {\n    return null;\n  }\n  return isTokenValid ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 38\n  }, this);\n};\n_s(PrivateRoute, \"tEoilGP08Y7y77QFnYsnZLOEAWU=\", false, function () {\n  return [useUserContext];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","Outlet","useEffect","useState","UserService","useUserContext","axios","jsxDEV","_jsxDEV","PrivateRoute","_s","isTokenValid","setIsTokenValid","user","setUser","headers","Authorization","token","res","get","process","env","REACT_APP_SERVER_SERVICE","data","code","fetchData","ownerID","err","owner","response","getUser","error","console","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Projects/secure-book-v2/client/src/config/PrivateRoute.js"],"sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport UserService from '../services/user.service.js';\r\nimport { useUserContext } from '../contexts/UserContext.js';\r\nimport axios from 'axios'\r\n\r\nconst PrivateRoute = () => {\r\n  const [isTokenValid, setIsTokenValid] = useState(null);\r\n  const { user, setUser } = useUserContext();\r\n\r\n  useEffect(() => {\r\n    (async function () { \r\n      if (!user) {\r\n        setIsTokenValid(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const headers = { Authorization: user.token };\r\n        const res = await axios.get(`${process.env.REACT_APP_SERVER_SERVICE}/api/auth/verify`, { headers });\r\n\r\n        if (res.data.code === 200) {\r\n          await fetchData(res.data.ownerID);\r\n          setIsTokenValid(true);\r\n        \r\n        } else {\r\n          setIsTokenValid(false);\r\n        }\r\n      } catch (err) {\r\n        setIsTokenValid(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const fetchData = async (owner) => {\r\n    try {\r\n      const response = await UserService.getUser(owner);\r\n\r\n      if (response.code === 200) {\r\n        setUser(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n  if (isTokenValid === null) {\r\n    return null;\r\n  }\r\n  return isTokenValid ? <Outlet /> : <Navigate to=\"/login\" />\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM;IAAEU,IAAI;IAAEC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE1CH,SAAS,CAAC,MAAM;IACd,CAAC,kBAAkB;MACjB,IAAI,CAACW,IAAI,EAAE;QACTD,eAAe,CAAC,KAAK,CAAC;QACtB;MACF;MAEA,IAAI;QACF,MAAMG,OAAO,GAAG;UAAEC,aAAa,EAAEH,IAAI,CAACI;QAAM,CAAC;QAC7C,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,kBAAiB,EAAE;UAAEP;QAAQ,CAAC,CAAC;QAEnG,IAAIG,GAAG,CAACK,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACzB,MAAMC,SAAS,CAACP,GAAG,CAACK,IAAI,CAACG,OAAO,CAAC;UACjCd,eAAe,CAAC,IAAI,CAAC;QAEvB,CAAC,MAAM;UACLA,eAAe,CAAC,KAAK,CAAC;QACxB;MACF,CAAC,CAAC,OAAOe,GAAG,EAAE;QACZf,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,SAAS,GAAG,MAAOG,KAAK,IAAK;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,WAAW,CAAC0B,OAAO,CAACF,KAAK,CAAC;MAEjD,IAAIC,QAAQ,CAACL,IAAI,KAAK,GAAG,EAAE;QACzBV,OAAO,CAACe,QAAQ,CAACN,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EACD,IAAIpB,YAAY,KAAK,IAAI,EAAE;IACzB,OAAO,IAAI;EACb;EACA,OAAOA,YAAY,gBAAGH,OAAA,CAACP,MAAM;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAG5B,OAAA,CAACR,QAAQ;IAACqC,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAAC1B,EAAA,CA3CID,YAAY;EAAA,QAEUJ,cAAc;AAAA;AAAAiC,EAAA,GAFpC7B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}