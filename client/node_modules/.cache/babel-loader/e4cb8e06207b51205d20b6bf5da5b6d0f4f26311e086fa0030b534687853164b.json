{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Exercise D21KTPM\\\\BCKH C\\u1EA5p Vi\\u1EC7n\\\\Semester-1-Year-3\\\\f2c\\\\v1.0.5\\\\client\\\\src\\\\components\\\\UploadButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../styles/uploadButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadButton() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      // Perform your upload logic here\n      console.log('Uploading file:', selectedFile);\n      // You can use fetch, axios, or any other method to send the file to your server\n    } else {\n      console.log('No file chosen');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadButton\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"actual-btn\",\n      hidden: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"actual-btn\",\n      children: \"Choose File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"file-chosen\",\n      children: selectedFile ? selectedFile.name : 'No file chosen'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadButton, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadButton;\nvar _c;\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadButton","_s","selectedFile","setSelectedFile","handleFileChange","e","file","target","files","handleUpload","console","log","className","children","type","id","hidden","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Exercise D21KTPM/BCKH Cấp Viện/Semester-1-Year-3/f2c/v1.0.5/client/src/components/UploadButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../styles/uploadButton.css\";\r\n\r\nexport default function UploadButton() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        setSelectedFile(file);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (selectedFile) {\r\n            // Perform your upload logic here\r\n            console.log('Uploading file:', selectedFile);\r\n            // You can use fetch, axios, or any other method to send the file to your server\r\n        } else {\r\n            console.log('No file chosen');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"uploadButton\">\r\n            <input\r\n                type=\"file\"\r\n                id=\"actual-btn\"\r\n                hidden\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <label htmlFor=\"actual-btn\">Choose File</label>\r\n\r\n            <span id=\"file-chosen\">{selectedFile ? selectedFile.name : 'No file chosen'}</span>\r\n\r\n            <button onClick={handleUpload}>Upload</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BL,eAAe,CAACG,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIP,YAAY,EAAE;MACd;MACAQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,YAAY,CAAC;MAC5C;IACJ,CAAC,MAAM;MACHQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKa,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBd,OAAA;MACIe,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACfC,MAAM;MACNC,QAAQ,EAAEb;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAEFtB,OAAA;MAAOuB,OAAO,EAAC,YAAY;MAAAT,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAE/CtB,OAAA;MAAMgB,EAAE,EAAC,aAAa;MAAAF,QAAA,EAAEX,YAAY,GAAGA,YAAY,CAACqB,IAAI,GAAG;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEnFtB,OAAA;MAAQyB,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd;AAACpB,EAAA,CAlCuBD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}