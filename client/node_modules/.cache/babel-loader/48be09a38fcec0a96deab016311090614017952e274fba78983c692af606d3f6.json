{"ast":null,"code":"import base64 from 'base-64';\nimport utf8 from 'utf8';\nfunction swap(str, pos1, pos2) {\n  // Chuyển chuỗi thành mảng để dễ thao tác\n  var mangChuoi = str.split('');\n\n  // Hoán đổi giá trị của hai phần tử\n  var temp = mangChuoi[pos1];\n  mangChuoi[pos1] = mangChuoi[pos2];\n  mangChuoi[pos2] = temp;\n\n  // Chuyển mảng trở lại thành chuỗi\n  var chuoiDaHoanDoi = mangChuoi.join('');\n  return chuoiDaHoanDoi;\n}\nconst Crypto = {\n  decrypt: function (encoded) {\n    const weight = 4;\n\n    // Swap letter at number to last index\n    encoded = swap(encoded, encoded.length - 1, weight);\n\n    // Remove draft base64 string\n    encoded = encoded.substring(0, encoded.length / 2);\n    let bytes = base64.decode(encoded);\n    let decoded = utf8.decode(bytes);\n    return decoded;\n  }\n};\nexport default Crypto;","map":{"version":3,"names":["base64","utf8","swap","str","pos1","pos2","mangChuoi","split","temp","chuoiDaHoanDoi","join","Crypto","decrypt","encoded","weight","length","substring","bytes","decode","decoded"],"sources":["C:/Users/quoct/Data/Projects/F2C/client/src/utils/Crypto.js"],"sourcesContent":["import base64 from 'base-64'\r\nimport utf8 from 'utf8'\r\n\r\nfunction swap(str, pos1, pos2) {\r\n    // Chuyển chuỗi thành mảng để dễ thao tác\r\n    var mangChuoi = str.split('');\r\n  \r\n    // Hoán đổi giá trị của hai phần tử\r\n    var temp = mangChuoi[pos1];\r\n    mangChuoi[pos1] = mangChuoi[pos2];\r\n    mangChuoi[pos2] = temp;\r\n  \r\n    // Chuyển mảng trở lại thành chuỗi\r\n    var chuoiDaHoanDoi = mangChuoi.join('');\r\n  \r\n    return chuoiDaHoanDoi;\r\n}\r\n\r\nconst Crypto = {\r\n    decrypt: function (encoded) {\r\n        const weight = 4;\r\n  \r\n        // Swap letter at number to last index\r\n        encoded = swap(encoded, encoded.length - 1, weight);\r\n  \r\n        // Remove draft base64 string\r\n        encoded = encoded.substring(0, encoded.length / 2);\r\n        let bytes = base64.decode(encoded);\r\n        let decoded = utf8.decode(bytes);\r\n  \r\n        return decoded;\r\n    }\r\n}\r\n\r\nexport default Crypto"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,IAAIA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC3B;EACA,IAAIC,SAAS,GAAGH,GAAG,CAACI,KAAK,CAAC,EAAE,CAAC;;EAE7B;EACA,IAAIC,IAAI,GAAGF,SAAS,CAACF,IAAI,CAAC;EAC1BE,SAAS,CAACF,IAAI,CAAC,GAAGE,SAAS,CAACD,IAAI,CAAC;EACjCC,SAAS,CAACD,IAAI,CAAC,GAAGG,IAAI;;EAEtB;EACA,IAAIC,cAAc,GAAGH,SAAS,CAACI,IAAI,CAAC,EAAE,CAAC;EAEvC,OAAOD,cAAc;AACzB;AAEA,MAAME,MAAM,GAAG;EACXC,OAAO,EAAE,SAAAA,CAAUC,OAAO,EAAE;IACxB,MAAMC,MAAM,GAAG,CAAC;;IAEhB;IACAD,OAAO,GAAGX,IAAI,CAACW,OAAO,EAAEA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAED,MAAM,CAAC;;IAEnD;IACAD,OAAO,GAAGA,OAAO,CAACG,SAAS,CAAC,CAAC,EAAEH,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC;IAClD,IAAIE,KAAK,GAAGjB,MAAM,CAACkB,MAAM,CAACL,OAAO,CAAC;IAClC,IAAIM,OAAO,GAAGlB,IAAI,CAACiB,MAAM,CAACD,KAAK,CAAC;IAEhC,OAAOE,OAAO;EAClB;AACJ,CAAC;AAED,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}