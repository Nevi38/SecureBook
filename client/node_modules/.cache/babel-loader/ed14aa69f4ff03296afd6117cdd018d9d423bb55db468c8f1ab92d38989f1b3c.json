{"ast":null,"code":"import axios from 'axios';\nconst endpoint = `${process.env.REACT_APP_SERVER_SERVICE}/api/posts`;\nexport const createPost = async (content, data) => {\n  try {\n    const form = new FormData();\n    form.append('post', JSON.stringify(content));\n    form.append('file', data);\n    const response = await axios.post(endpoint, form, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPosts = async (limit, offset) => {\n  try {\n    const response = await axios.get(endpoint, {\n      params: {\n        limit,\n        offset\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deletePost = async postId => {\n  try {\n    const response = await axios.delete(`${endpoint}/${postId}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPost = async postId => {\n  try {\n    const response = await axios.get(`${endpoint}/${postId}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get post by user id with limit and offet\nexport const getPostByUserId = async (userId, limit, offset) => {\n  try {\n    const response = await axios.get(`${endpoint}/user/${userId}`, {\n      params: {\n        limit,\n        offset\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["axios","endpoint","process","env","REACT_APP_SERVER_SERVICE","createPost","content","data","form","FormData","append","JSON","stringify","response","post","headers","error","console","getPosts","limit","offset","get","params","deletePost","postId","delete","getPost","getPostByUserId","userId"],"sources":["C:/Users/quoct/Data/Projects/secure-book-v2/client/src/services/post.service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst endpoint = `${process.env.REACT_APP_SERVER_SERVICE}/api/posts`;\r\n\r\nexport const createPost = async (content, data) => {\r\n    try {\r\n        const form = new FormData()\r\n        form.append('post', JSON.stringify(content))\r\n        form.append('file', data)\r\n        \r\n        const response = await axios.post(endpoint, form, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const getPosts = async (limit, offset) => {\r\n    try {\r\n        const response = await axios.get(endpoint, {\r\n            params: {\r\n                limit,\r\n                offset\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = async (postId) => {\r\n    try {\r\n        const response = await axios.delete(`${endpoint}/${postId}`)\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const getPost = async (postId) => {\r\n    try {\r\n        const response = await axios.get(`${endpoint}/${postId}`)\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// get post by user id with limit and offet\r\nexport const getPostByUserId = async (userId, limit, offset) => {\r\n    try {\r\n        const response = await axios.get(`${endpoint}/user/${userId}`, {\r\n            params: {\r\n                limit,\r\n                offset\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,YAAW;AAEpE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,OAAO,EAAEC,IAAI,KAAK;EAC/C,IAAI;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IAC5CE,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAEzB,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACb,QAAQ,EAAEO,IAAI,EAAE;MAC9CO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,OAAOF,QAAQ,CAACN,IAAI;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;EAC7C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMb,KAAK,CAACqB,GAAG,CAACpB,QAAQ,EAAE;MACvCqB,MAAM,EAAE;QACJH,KAAK;QACLC;MACJ;IACJ,CAAC,CAAC;IAEF,OAAOP,QAAQ,CAACN,IAAI;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOC,MAAM,IAAK;EACxC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMb,KAAK,CAACyB,MAAM,CAAE,GAAExB,QAAS,IAAGuB,MAAO,EAAC,CAAC;IAE5D,OAAOX,QAAQ,CAACN,IAAI;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,OAAO,MAAMU,OAAO,GAAG,MAAOF,MAAM,IAAK;EACrC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMb,KAAK,CAACqB,GAAG,CAAE,GAAEpB,QAAS,IAAGuB,MAAO,EAAC,CAAC;IAEzD,OAAOX,QAAQ,CAACN,IAAI;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAET,KAAK,EAAEC,MAAM,KAAK;EAC5D,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMb,KAAK,CAACqB,GAAG,CAAE,GAAEpB,QAAS,SAAQ2B,MAAO,EAAC,EAAE;MAC3DN,MAAM,EAAE;QACJH,KAAK;QACLC;MACJ;IACJ,CAAC,CAAC;IAEF,OAAOP,QAAQ,CAACN,IAAI;EAExB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}