{"ast":null,"code":"import axios from 'axios';\nconst endpoint = `${process.env.REACT_APP_SERVER_SERVICE}/api/posts`;\nexport const createPost = async (content, data) => {\n  try {\n    const form = new FormData();\n    form.append('post', JSON.stringify(content));\n    form.append('file', data);\n    const response = await axios.post(endpoint, form, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'access_token': localStorage.getItem('access_token')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPosts = async (limit, offset) => {\n  try {\n    const response = await axios.get(endpoint, {\n      params: {\n        limit,\n        offset\n      },\n      headers: {\n        'access_token': localStorage.getItem('access_token')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deletePost = async postId => {\n  try {\n    const response = await axios.delete(`${endpoint}/${postId}`, {\n      headers: {\n        'access_token': localStorage.getItem('access_token')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPost = async postId => {\n  try {\n    const response = await axios.get(`${endpoint}/${postId}`, {\n      headers: {\n        'access_token': localStorage.getItem('access_token')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// get post by user id with limit and offet\nexport const getPostByUserId = async (userId, limit, offset) => {\n  try {\n    const response = await axios.get(`${endpoint}/user/${userId}`, {\n      params: {\n        limit,\n        offset\n      },\n      headers: {\n        'access_token': localStorage.getItem('access_token')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nvar PostType = /*#__PURE__*/function (PostType) {\n  PostType[PostType[\"Edit\"] = 0] = \"Edit\";\n  PostType[PostType[\"Create\"] = 1] = \"Create\";\n  PostType[PostType[\"Delete\"] = 2] = \"Delete\";\n  return PostType;\n}(PostType || {});\nclass PostService {\n  static async fetchData(action, data) {\n    let method;\n    let url;\n    let headers = {\n      'access_token': localStorage.getItem('access_token')\n    };\n    let params;\n    switch (action) {\n      case PostType.Edit:\n        break;\n      case PostType.Create:\n        break;\n      case PostType.Delete:\n        break;\n    }\n    try {\n      const response = await axios({\n        method,\n        url,\n        data,\n        headers,\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nexport { PostType };","map":{"version":3,"names":["axios","endpoint","process","env","REACT_APP_SERVER_SERVICE","createPost","content","data","form","FormData","append","JSON","stringify","response","post","headers","localStorage","getItem","error","console","getPosts","limit","offset","get","params","deletePost","postId","delete","getPost","getPostByUserId","userId","PostType","PostService","fetchData","action","method","url","Edit","Create","Delete"],"sources":["C:/Users/quoct/Data/Projects/secure-book-v2/client/src/services/post.service.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst endpoint = `${process.env.REACT_APP_SERVER_SERVICE}/api/posts`;\r\n\r\nexport const createPost = async (content: any, data: string | Blob) => {\r\n    try {\r\n        const form = new FormData()\r\n        form.append('post', JSON.stringify(content))\r\n        form.append('file', data)\r\n        \r\n        const response = await axios.post(endpoint, form, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'access_token': localStorage.getItem('access_token')\r\n            },\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const getPosts = async (limit: any, offset: any) => {\r\n    try {\r\n        const response = await axios.get(endpoint, {\r\n            params: {\r\n                limit,\r\n                offset\r\n            },\r\n            headers: {\r\n                'access_token': localStorage.getItem('access_token')\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = async (postId: any) => {\r\n    try {\r\n        const response = await axios.delete(`${endpoint}/${postId}`, {\r\n            headers: {\r\n                'access_token': localStorage.getItem('access_token')\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const getPost = async (postId: any) => {\r\n    try {\r\n        const response = await axios.get(`${endpoint}/${postId}`, {\r\n            headers: {\r\n                'access_token': localStorage.getItem('access_token')\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n// get post by user id with limit and offet\r\nexport const getPostByUserId = async (userId: any, limit: any, offset: any) => {\r\n    try {\r\n        const response = await axios.get(`${endpoint}/user/${userId}`, {\r\n            params: {\r\n                limit,\r\n                offset\r\n            },\r\n            headers: {\r\n                'access_token': localStorage.getItem('access_token')\r\n            }\r\n        })\r\n\r\n        return response.data;\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nenum PostType {\r\n    Edit,\r\n    Create,\r\n    Delete\r\n}\r\n\r\nclass PostService {\r\n    static async fetchData(action: PostType, data: any) {\r\n        let method;\r\n        let url;\r\n        let headers = {\r\n            'access_token': localStorage.getItem('access_token')\r\n        }\r\n        let params;\r\n\r\n        switch (action) {\r\n            case PostType.Edit:\r\n                break;\r\n            case PostType.Create:\r\n                break;\r\n            case PostType.Delete:\r\n                break;\r\n        } \r\n\r\n        try {\r\n            const response = await axios({ method, url, data, headers, params });\r\n\r\n            return response.data\r\n           \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport { PostType }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}