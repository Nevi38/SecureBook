{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Projects\\\\secure-book-v2\\\\client\\\\src\\\\config\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport UserService from '../services/user.service.js';\nimport { useUserContext } from '../contexts/UserContext.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [isTokenValid, setIsTokenValid] = useState(null);\n  const {\n    user,\n    setUser\n  } = useUserContext();\n  useEffect(() => {\n    (async function () {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsTokenValid(false);\n        return;\n      }\n      try {\n        const headers = {\n          Authorization: token\n        };\n        const res = await axios.get(`${process.env.REACT_APP_SERVER_SERVICE}/api/auth/verify`, {\n          headers\n        });\n        if (res.data.code === 200) {\n          localStorage.setItem('ownerID', res.data.ownerID);\n\n          // wait unitl fetch data finish\n          await fetchData(res.data.ownerID);\n          setIsTokenValid(true);\n        } else {\n          setIsTokenValid(false);\n        }\n      } catch (err) {\n        setIsTokenValid(false);\n      }\n    })();\n  }, []);\n  const fetchData = async owner => {\n    try {\n      const response = await UserService.getUser(owner);\n      if (response.code === 200) {\n        console.log(response.data);\n        setUser(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  };\n  return isTokenValid ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 35\n  }, this);\n};\n_s(PrivateRoute, \"tEoilGP08Y7y77QFnYsnZLOEAWU=\", false, function () {\n  return [useUserContext];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","useEffect","useState","UserService","useUserContext","axios","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isTokenValid","setIsTokenValid","user","setUser","token","localStorage","getItem","headers","Authorization","res","get","process","env","REACT_APP_SERVER_SERVICE","data","code","setItem","ownerID","fetchData","err","owner","response","getUser","console","log","error","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Projects/secure-book-v2/client/src/config/PrivateRoute.js"],"sourcesContent":["import { Navigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport UserService from '../services/user.service.js';\r\nimport { useUserContext } from '../contexts/UserContext.js';\r\nimport axios from 'axios'\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const [isTokenValid, setIsTokenValid] = useState(null);\r\n  const { user, setUser } = useUserContext();\r\n\r\n  useEffect(() => {\r\n    (async function () { \r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setIsTokenValid(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const headers = { Authorization: token };\r\n        const res = await axios.get(`${process.env.REACT_APP_SERVER_SERVICE}/api/auth/verify`, { headers });\r\n\r\n        if (res.data.code === 200) {\r\n          localStorage.setItem('ownerID', res.data.ownerID);\r\n          \r\n          // wait unitl fetch data finish\r\n          await fetchData(res.data.ownerID);\r\n    \r\n          setIsTokenValid(true);\r\n        \r\n        } else {\r\n          setIsTokenValid(false);\r\n        }\r\n      } catch (err) {\r\n        setIsTokenValid(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const fetchData = async (owner) => {\r\n    try {\r\n      const response = await UserService.getUser(owner);\r\n\r\n      if (response.code === 200) {\r\n        console.log(response.data);\r\n        setUser(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  return isTokenValid ? children: <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM;IAAEW,IAAI;IAAEC;EAAQ,CAAC,GAAGV,cAAc,CAAC,CAAC;EAE1CH,SAAS,CAAC,MAAM;IACd,CAAC,kBAAkB;MACjB,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVH,eAAe,CAAC,KAAK,CAAC;QACtB;MACF;MAEA,IAAI;QACF,MAAMM,OAAO,GAAG;UAAEC,aAAa,EAAEJ;QAAM,CAAC;QACxC,MAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,kBAAiB,EAAE;UAAEN;QAAQ,CAAC,CAAC;QAEnG,IAAIE,GAAG,CAACK,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACzBV,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEP,GAAG,CAACK,IAAI,CAACG,OAAO,CAAC;;UAEjD;UACA,MAAMC,SAAS,CAACT,GAAG,CAACK,IAAI,CAACG,OAAO,CAAC;UAEjChB,eAAe,CAAC,IAAI,CAAC;QAEvB,CAAC,MAAM;UACLA,eAAe,CAAC,KAAK,CAAC;QACxB;MACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACZlB,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,SAAS,GAAG,MAAOE,KAAK,IAAK;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,WAAW,CAAC8B,OAAO,CAACF,KAAK,CAAC;MAEjD,IAAIC,QAAQ,CAACN,IAAI,KAAK,GAAG,EAAE;QACzBQ,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC;QAC1BX,OAAO,CAACkB,QAAQ,CAACP,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,OAAOzB,YAAY,GAAGF,QAAQ,gBAAEF,OAAA,CAACP,QAAQ;IAACqC,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1D,CAAC;AAAC/B,EAAA,CAhDIF,YAAY;EAAA,QAEUJ,cAAc;AAAA;AAAAsC,EAAA,GAFpClC,YAAY;AAkDlB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}