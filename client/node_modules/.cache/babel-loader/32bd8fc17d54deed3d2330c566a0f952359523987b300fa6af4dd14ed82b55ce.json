{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Projects\\\\secure-book-v2\\\\client\\\\src\\\\components\\\\ListPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PostComponent from \"./Post\";\nimport { getPosts } from \"../services/post.service\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport socket from \"../socket/socket-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListPost() {\n  _s();\n  const domain = process.env.REACT_APP_SERVER_SERVICE;\n  const [post, setPost] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const maxPost = useRef(0);\n  const limit = 6;\n  const offset = 0;\n  useEffect(() => {\n    fetchMoreData();\n    socket.on(\"new-post\", data => {\n      console.log(data);\n      //  setPost([data, ...post]);\n    });\n\n    return () => {\n      socket.off(\"new-post\");\n    };\n  }, []);\n  async function fetchMoreData() {\n    const payload = await getPosts(limit, offset + maxPost.current);\n    if (payload.data.length > 0) {\n      setPost([...post, ...payload.data]);\n      maxPost.current += payload.data.length;\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: post.length,\n    next: fetchMoreData,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this),\n    scrollableTarget: \"content\",\n    children: post.map((item, index) => /*#__PURE__*/_jsxDEV(PostComponent, {\n      post: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(ListPost, \"nuNl5fmIEqC1FbMwrcISMvkinAA=\");\n_c = ListPost;\nvar _c;\n$RefreshReg$(_c, \"ListPost\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PostComponent","getPosts","InfiniteScroll","socket","jsxDEV","_jsxDEV","ListPost","_s","domain","process","env","REACT_APP_SERVER_SERVICE","post","setPost","hasMore","setHasMore","maxPost","limit","offset","fetchMoreData","on","data","console","log","off","payload","current","length","dataLength","next","loader","children","fileName","_jsxFileName","lineNumber","columnNumber","scrollableTarget","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Projects/secure-book-v2/client/src/components/ListPost.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport PostComponent from \"./Post\";\r\nimport { getPosts } from \"../services/post.service\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport socket from \"../socket/socket-client\";\r\n\r\nexport default function ListPost() {\r\n    const domain = process.env.REACT_APP_SERVER_SERVICE;\r\n    const [post, setPost] = useState([]);\r\n    const [hasMore, setHasMore] = useState(false)\r\n   \r\n    const maxPost = useRef(0);\r\n    const limit = 6;\r\n    const offset = 0;\r\n\r\n    useEffect(() => {\r\n        fetchMoreData()\r\n\r\n        socket.on(\"new-post\", (data) => {\r\n            console.log(data)\r\n          //  setPost([data, ...post]);\r\n        });\r\n        \r\n        return () => {\r\n            socket.off(\"new-post\");\r\n        };\r\n    }, [])\r\n\r\n    async function fetchMoreData() {\r\n        const payload = await getPosts(limit, offset + maxPost.current)\r\n\r\n        if (payload.data.length > 0) {\r\n            setPost([...post, ...payload.data])\r\n            maxPost.current += payload.data.length\r\n            setHasMore(true)\r\n        } else {\r\n            setHasMore(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={post.length}\r\n            next={fetchMoreData}\r\n            hasMore={hasMore}\r\n            loader={<h4>Loading...</h4>}\r\n            scrollableTarget=\"content\"\r\n        >\r\n            {\r\n                post.map((item, index) => (\r\n                    <PostComponent key={index} post={item}/>\r\n                ))\r\n            }\r\n        </InfiniteScroll>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,QAAQ;AAClC,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMmB,OAAO,GAAGjB,MAAM,CAAC,CAAC,CAAC;EACzB,MAAMkB,KAAK,GAAG,CAAC;EACf,MAAMC,MAAM,GAAG,CAAC;EAEhBpB,SAAS,CAAC,MAAM;IACZqB,aAAa,CAAC,CAAC;IAEfhB,MAAM,CAACiB,EAAE,CAAC,UAAU,EAAGC,IAAI,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB;IACF,CAAC,CAAC;;IAEF,OAAO,MAAM;MACTlB,MAAM,CAACqB,GAAG,CAAC,UAAU,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeL,aAAaA,CAAA,EAAG;IAC3B,MAAMM,OAAO,GAAG,MAAMxB,QAAQ,CAACgB,KAAK,EAAEC,MAAM,GAAGF,OAAO,CAACU,OAAO,CAAC;IAE/D,IAAID,OAAO,CAACJ,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MACzBd,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE,GAAGa,OAAO,CAACJ,IAAI,CAAC,CAAC;MACnCL,OAAO,CAACU,OAAO,IAAID,OAAO,CAACJ,IAAI,CAACM,MAAM;MACtCZ,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACHA,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EAEA,oBACIV,OAAA,CAACH,cAAc;IACX0B,UAAU,EAAEhB,IAAI,CAACe,MAAO;IACxBE,IAAI,EAAEV,aAAc;IACpBL,OAAO,EAAEA,OAAQ;IACjBgB,MAAM,eAAEzB,OAAA;MAAA0B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAC5BC,gBAAgB,EAAC,SAAS;IAAAL,QAAA,EAGtBnB,IAAI,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjBlC,OAAA,CAACL,aAAa;MAAaY,IAAI,EAAE0B;IAAK,GAAlBC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEM,CAAC;AAEzB;AAAC5B,EAAA,CAjDuBD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}