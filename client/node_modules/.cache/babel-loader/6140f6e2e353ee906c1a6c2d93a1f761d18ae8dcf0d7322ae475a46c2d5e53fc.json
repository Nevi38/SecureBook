{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quoct\\\\Data\\\\Projects\\\\F2C\\\\client\\\\src\\\\components\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SERVER_PORT;\n\n/**\r\n* Message component\r\n* @param {Number} owner\r\n* @param {Object} chat\r\n* @param {Number} currentUser\r\n*/\nexport default function Message({\n  owner,\n  chat,\n  currentUser\n}) {\n  _s();\n  const [avatar, setAvatar] = useState(\"\");\n  useEffect(() => {\n    if (chat.sender._id === currentUser._id) {\n      const avatar = currentUser.avatar;\n      setAvatar(server + \"/uploads/\" + avatar);\n    } else {\n      const avatar = chat.sender.avatar;\n      setAvatar(server + \"/uploads/\" + avatar);\n    }\n  }, [chat, currentUser]);\n  const renderComponent = () => {\n    if (owner === \"my\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment comment-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: chat.message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"avatar\",\n          src: avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    } else if (owner === \"other\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment comment-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"avatar\",\n          src: avatar,\n          alt: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: chat.message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return renderComponent(); // No need for extra parentheses\n}\n_s(Message, \"ygaah4GiP5L6DIRzi2rtvUELK5E=\");\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","server","process","env","REACT_APP_SEVER_IP","REACT_APP_SERVER_PORT","Message","owner","chat","currentUser","_s","avatar","setAvatar","sender","_id","renderComponent","className","children","message","text","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/quoct/Data/Projects/F2C/client/src/components/Message.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst server = process.env.REACT_APP_SEVER_IP + \":\" + process.env.REACT_APP_SERVER_PORT\r\n\r\n/**\r\n* Message component\r\n* @param {Number} owner\r\n* @param {Object} chat\r\n* @param {Number} currentUser\r\n*/\r\nexport default function Message({ owner, chat, currentUser }) {\r\n    const [avatar, setAvatar] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (chat.sender._id === currentUser._id) {\r\n            const avatar = currentUser.avatar\r\n            setAvatar(server + \"/uploads/\" + avatar)\r\n        } else {\r\n            const avatar = chat.sender.avatar\r\n            setAvatar(server + \"/uploads/\" + avatar)\r\n        }\r\n    }, [chat, currentUser])\r\n\r\n    const renderComponent = () => {\r\n        if (owner === \"my\") {\r\n            return (\r\n                <div className=\"comment comment-right\">\r\n                    <div className=\"box\">\r\n                        {/* <b className=\"sender\">{fullName}</b> */}\r\n                        <p className=\"text\">{chat.message.text}</p>\r\n                    </div>\r\n                    <img\r\n                        className=\"avatar\"\r\n                        src={avatar}\r\n                        alt=\"avatar\"\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (owner === \"other\") {\r\n            return (\r\n                <div className=\"comment comment-left\">\r\n                    <img\r\n                        className=\"avatar\"\r\n                        src={avatar}\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <div className=\"box\">\r\n                        {/* <b className=\"sender\">{fullName}</b> */}\r\n                        <p className=\"text\">{chat.message.text}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return renderComponent(); // No need for extra parentheses\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAAG,GAAG,GAAGF,OAAO,CAACC,GAAG,CAACE,qBAAqB;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,CAACK,MAAM,CAACC,GAAG,KAAKL,WAAW,CAACK,GAAG,EAAE;MACrC,MAAMH,MAAM,GAAGF,WAAW,CAACE,MAAM;MACjCC,SAAS,CAACX,MAAM,GAAG,WAAW,GAAGU,MAAM,CAAC;IAC5C,CAAC,MAAM;MACH,MAAMA,MAAM,GAAGH,IAAI,CAACK,MAAM,CAACF,MAAM;MACjCC,SAAS,CAACX,MAAM,GAAG,WAAW,GAAGU,MAAM,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACH,IAAI,EAAEC,WAAW,CAAC,CAAC;EAEvB,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIR,KAAK,KAAK,IAAI,EAAE;MAChB,oBACIP,OAAA;QAAKgB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBAClCjB,OAAA;UAAKgB,SAAS,EAAC,KAAK;UAAAC,QAAA,eAEhBjB,OAAA;YAAGgB,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAET,IAAI,CAACU,OAAO,CAACC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACNvB,OAAA;UACIgB,SAAS,EAAC,QAAQ;UAClBQ,GAAG,EAAEb,MAAO;UACZc,GAAG,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEd,CAAC,MAAM,IAAIhB,KAAK,KAAK,OAAO,EAAE;MAC1B,oBACIP,OAAA;QAAKgB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjCjB,OAAA;UACIgB,SAAS,EAAC,QAAQ;UAClBQ,GAAG,EAAEb,MAAO;UACZc,GAAG,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACFvB,OAAA;UAAKgB,SAAS,EAAC,KAAK;UAAAC,QAAA,eAEhBjB,OAAA;YAAGgB,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAET,IAAI,CAACU,OAAO,CAACC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEd;EACJ,CAAC;EAED,OAAOR,eAAe,CAAC,CAAC,CAAC,CAAC;AAC9B;AAACL,EAAA,CA9CuBJ,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}